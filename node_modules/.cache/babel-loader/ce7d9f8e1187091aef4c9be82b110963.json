{"ast":null,"code":"var _jsxFileName = \"/Users/david/Documents/mycode/react/shopping-cart/shopping-cart/shopping-cart/shopping-cart/src/features/product-listing/product-list-item.js\";\n// Objective is to create a ProductListItem component\nimport React from 'react'; // Will take some props. Will return a div. Inside div display the product. H3 for the name props.name. Do an image tag, height equal to 100, since it is a number in react we will give it curly braces so JavaScript will read as a number not a string. It will have a title will use props.name, have src will do curly braces and backticks for template string. If we look at the products.json we can see that image gives us a file name. \n// Then do a div with props.description, for the description of the product. Then another div props.price and add dollar sign $. Add a button that says Add to cart. \n\nconst ProductListItem = props => {\n  // 1. find the current item that is in this component and find it inside of the cart. \n  // pass the cart in. This filter call will return the array but we only want the first item in this cart. \n  // Part 2 min 7:21 no longer need below function.\n  // const thisItemInCart = props.cart.filter(item => item.id === props.product.id)[0];\n  return React.createElement(\"div\", {\n    className: \"product-list-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.product.name), React.createElement(\"img\", {\n    height: 100,\n    title: props.product.name,\n    src: `/products/${props.product.image}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.product.description), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"$\", props.product.price), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => props.addToCart(props.product),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Add to cart (\", // if thisItemInCart is undefined or null the && will short circuit, the or will fire and we will get a 0. Put parenthesis around first part to execute first. This will evaluate as a true or a false (thisItemInCart && thisItemInCart.quantity). If true then quantity will print out else 0.\n  //2. thisItemInCart; This item is it in the cart? If it is how many are there? thisItemInCart.quantity; if there are then put the quantity here; if not then return 0. \n  // (thisItemInCart && thisItemInCart.quantity) || 0\n  // change to this function part 2 8:52\n  // if props.cartItem does not exist i.e. is no in the cart.\n  // it will return false, which means this block will return false\n  // (props.cartItem && props.cartItem.quantity) will return false\n  // will not run and the OR kicks in, and will return 0 cause it is not in our cart. \n  props.cartItem && props.cartItem.quantity || 0, \")\")));\n};\n\nexport default ProductListItem;","map":{"version":3,"sources":["/Users/david/Documents/mycode/react/shopping-cart/shopping-cart/shopping-cart/shopping-cart/src/features/product-listing/product-list-item.js"],"names":["React","ProductListItem","props","product","name","image","description","price","addToCart","cartItem","quantity"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B;AACA;AAEA;AACA;AAEA,SAAO;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,OAAN,CAAcC,IAAnB,CADG,EAEH;AACI,IAAA,MAAM,EAAE,GADZ;AAEI,IAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAcC,IAFzB;AAGI,IAAA,GAAG,EAAG,aAAYF,KAAK,CAACC,OAAN,CAAcE,KAAM,EAH1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,EAOH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,KAAK,CAACC,OAAN,CAAcG,WAApB,CAPG,EAQH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOJ,KAAK,CAACC,OAAN,CAAcI,KAArB,CARG,EASH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE,MAAML,KAAK,CAACM,SAAN,CAAgBN,KAAK,CAACC,OAAtB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACCD,EAAAA,KAAK,CAACO,QAAN,IAAkBP,KAAK,CAACO,QAAN,CAAeC,QAAlC,IAA+C,CAVnD,MADJ,CATG,CAAP;AAyBH,CAhCD;;AAkCA,eAAeT,eAAf","sourcesContent":["// Objective is to create a ProductListItem component\n\nimport React from 'react';\n\n// Will take some props. Will return a div. Inside div display the product. H3 for the name props.name. Do an image tag, height equal to 100, since it is a number in react we will give it curly braces so JavaScript will read as a number not a string. It will have a title will use props.name, have src will do curly braces and backticks for template string. If we look at the products.json we can see that image gives us a file name. \n// Then do a div with props.description, for the description of the product. Then another div props.price and add dollar sign $. Add a button that says Add to cart. \nconst ProductListItem = (props) => {\n    // 1. find the current item that is in this component and find it inside of the cart. \n    // pass the cart in. This filter call will return the array but we only want the first item in this cart. \n\n    // Part 2 min 7:21 no longer need below function.\n    // const thisItemInCart = props.cart.filter(item => item.id === props.product.id)[0];\n\n    return <div className='product-list-item'>\n        <h3>{props.product.name}</h3>\n        <img\n            height={100}\n            title={props.product.name}\n            src={`/products/${props.product.image}`}\n        />\n        <div>{props.product.description}</div>\n        <div>${props.product.price}</div>\n        <div>\n            <button onClick={() => props.addToCart(props.product)}>Add to cart ({\n                // if thisItemInCart is undefined or null the && will short circuit, the or will fire and we will get a 0. Put parenthesis around first part to execute first. This will evaluate as a true or a false (thisItemInCart && thisItemInCart.quantity). If true then quantity will print out else 0.\n                //2. thisItemInCart; This item is it in the cart? If it is how many are there? thisItemInCart.quantity; if there are then put the quantity here; if not then return 0. \n                // (thisItemInCart && thisItemInCart.quantity) || 0\n\n                // change to this function part 2 8:52\n                // if props.cartItem does not exist i.e. is no in the cart.\n                // it will return false, which means this block will return false\n                // (props.cartItem && props.cartItem.quantity) will return false\n                // will not run and the OR kicks in, and will return 0 cause it is not in our cart. \n                (props.cartItem && props.cartItem.quantity) || 0\n            })</button>\n        </div>\n    </div>\n\n}\n\nexport default ProductListItem;"]},"metadata":{},"sourceType":"module"}