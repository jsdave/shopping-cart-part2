{"ast":null,"code":"var _jsxFileName = \"/Users/david/Documents/mycode/react/shopping-cart/shopping-cart/shopping-cart/shopping-cart/src/features/product-listing/product-list-item.js\";\nimport React from 'react'; // Will take some props. Will return a div. Inside div display the product. H3 for the name props.name. Do an image tag, height equal to 100, since it is a number in react we will give it curly braces so JavaScript will read as a number not a string. It will have a title will use props.name, have src will do curly braces and backticks for template string. If we look at the products.json we can see that image gives us a file name. \n// Then do a div with props.description, for the description of the product. Then another div props.price and add dollar sign $. Add a button that says Add to cart. \n\nconst productListItem = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.name), React.createElement(\"img\", {\n    height: 100,\n    title: props.product.name,\n    src: `/proucts/${props.image}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, props.description), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"$\", props.price), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Add to cart\")));\n};\n\nexport default productListItem;","map":{"version":3,"sources":["/Users/david/Documents/mycode/react/shopping-cart/shopping-cart/shopping-cart/shopping-cart/src/features/product-listing/product-list-item.js"],"names":["React","productListItem","props","name","product","image","description","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAX,CADG,EAEH;AACI,IAAA,MAAM,EAAE,GADZ;AAEI,IAAA,KAAK,EAAED,KAAK,CAACE,OAAN,CAAcD,IAFzB;AAGI,IAAA,GAAG,EAAG,YAAWD,KAAK,CAACG,KAAM,EAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,EAOH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,KAAK,CAACI,WAAZ,CAPG,EAQH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOJ,KAAK,CAACK,KAAb,CARG,EASH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CATG,CAAP;AAeH,CAhBD;;AAkBA,eAAeN,eAAf","sourcesContent":["import React from 'react';\n\n// Will take some props. Will return a div. Inside div display the product. H3 for the name props.name. Do an image tag, height equal to 100, since it is a number in react we will give it curly braces so JavaScript will read as a number not a string. It will have a title will use props.name, have src will do curly braces and backticks for template string. If we look at the products.json we can see that image gives us a file name. \n// Then do a div with props.description, for the description of the product. Then another div props.price and add dollar sign $. Add a button that says Add to cart. \nconst productListItem = (props) => {\n    return <div>\n        <h3>{props.name}</h3>\n        <img\n            height={100}\n            title={props.product.name}\n            src={`/proucts/${props.image}`}\n        />\n        <div>{props.description}</div>\n        <div>${props.price}</div>\n        <div>\n            <button>Add to cart</button>\n        </div>\n\n    </div>\n\n}\n\nexport default productListItem;"]},"metadata":{},"sourceType":"module"}